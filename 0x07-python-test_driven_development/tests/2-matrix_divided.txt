Doctest to check the ``2-matrix_divided`` module
======================

Importing:
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

>>> m = __import__("2-matrix_divided").__doc__
>>> len(m) > 1
True

>>> f = __import__("2-matrix_divided").matrix_divided.__doc__
>>> len(f) > 1
True

>>> matrix_divided(None, 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix = "Hello"
>>> matrix_divided(matrix, 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3], "Hello"]
>>> matrix_divided(matrix, 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, "H", 3], [4.1, 5, 6.8]]
>>> matrix_divided(matrix, 11)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, True, 3], [False, 5, 6.8]]
>>> matrix_divided(matrix, 11)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, (1,), 3], [4, 5, 6.8]]
>>> matrix_divided(matrix, 11)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, "A")
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, True)
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix
[[1, 2, 3], [4, 5, 6]]

>>> matrix = [[1, 2.4, 3], [4.1, 5, 6.8]]
>>> matrix_divided(matrix, 11)
[[0.09, 0.22, 0.27], [0.37, 0.45, 0.62]]
>>> matrix
[[1, 2.4, 3], [4.1, 5, 6.8]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 4.5)
[[0.22, 0.44, 0.67], [0.89, 1.11, 1.33]]
>>> matrix
[[1, 2, 3], [4, 5, 6]]

>>> matrix = [[-1, -2, -3], [-4, -5, -6]]
>>> matrix_divided(matrix, 3)
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]
>>> matrix
[[-1, -2, -3], [-4, -5, -6]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, -3)
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]
>>> matrix
[[1, 2, 3], [4, 5, 6]]

>>> matrix = []
>>> matrix_divided(matrix, 1)
[]
>>> matrix
[]

>>> matrix = [[1, 2, 3]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5]]
>>> matrix
[[1, 2, 3]]

>>> matrix = [[1], [2], [3]]
>>> matrix_divided(matrix, 2)
[[0.5], [1.0], [1.5]]
>>> matrix
[[1], [2], [3]]

>>> matrix_divided(matrix, float('inf'))
[[0.0], [0.0], [0.0]]

>>> matrix = [[1, float('inf'), 3], [4, 5, 6]]
>>> matrix_divided(matrix, 1)
[[1.0, inf, 3.0], [4.0, 5.0, 6.0]]

>>> matrix_divided(matrix, float('inf'))
[[0.0, nan, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided(matrix)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided(matrix, 1, 3)
Traceback (most recent call last):
...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given
